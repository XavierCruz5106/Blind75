/*
 * This source file was generated by the Gradle 'init' task
 */
package missingnumber;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class App {
    public int missingNumberSet(int[] nums){
        Set<Integer> numsUpToN = new HashSet<>();

        for (int i = 0; i <= nums.length; i++){
            numsUpToN.add(i);
        }

        Arrays.sort(nums);
        Iterator<Integer> iterator = numsUpToN.iterator();
        for (int i = 0; i < nums.length; i++){
            int currentNum = nums[i];
            int setNum = iterator.next();
            if (currentNum != setNum){
                return setNum;
            }
            iterator.remove();

            if (nums.length - 1 == i){

                return iterator.next();
            }
        }

        return -1;
    }

    public int missingNumberSetOptimized(int[] nums){
        Set<Integer> numsUpToN = new HashSet<>();
        int n = nums.length;

        for (int i = 0; i <= n; i++) {
            numsUpToN.add(i);
        }

        for (int num : nums) {
            numsUpToN.remove(num);
        }

        return numsUpToN.iterator().next();
    }


}
