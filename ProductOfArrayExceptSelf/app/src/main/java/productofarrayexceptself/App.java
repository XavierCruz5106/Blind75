/*
 * This source file was generated by the Gradle 'init' task
 */
package productofarrayexceptself;

public class App {
    public int[] solution1(int[] nums) {
        int[] answer = new int[nums.length];
        for (int i = 0; i < nums.length; i++){
            int product = 1;
            for (int j = 0; j < nums.length; j++){
                if (i == j){
                    continue;
                }

                product *= nums[j];
            }
            answer[i] = product;
        }
        return answer;
    }

    public int[] solution2(int[] nums){
        int n = nums.length;
        int[] ans = new int[n];
        int[] prefix = new int[n];
        int[] suffix = new int[n];

        prefix[0] = 1;
        for (int i = 1; i < n; ++i){
            prefix[i] = prefix[i - 1] * nums[i - 1];
        }

        suffix[n - 1] = 1;
        for (int i = n - 2; i >= 0; --i){
            suffix[i] = suffix[i + 1] * nums[i + 1];
        }

        for (int i = 0; i < n; ++i){
            ans[i] = prefix[i] * suffix[i];
        }

        return ans;
    }

    public int[] solution3(int[] nums){
        int[] answer = new int[nums.length];
        int product = 1;

        for (int i = 0; i < nums.length; i++) {
            answer[i] = product;
            product *= nums[i];
        }
        product = 1;

        for (int i = nums.length - 1; i >= 0; i--) {
            answer[i] *= product;
            product *= nums[i];
        }
        return answer;
    }



}
